## üìä Fun√ß√µes de Grupo em SQL

As **fun√ß√µes de grupo (ou fun√ß√µes agregadas)** permitem realizar c√°lculos em colunas de m√∫ltiplas linhas, retornando um √∫nico valor.

---

### ‚úÖ 1. SUM (Soma)

Retorna a **soma** dos valores em uma coluna num√©rica.

```sql
SELECT SUM(salario) AS total_salarios FROM funcionarios;
```

---

### ‚úÖ 2. AVG (M√©dia)

Retorna a **m√©dia aritm√©tica** dos valores em uma coluna num√©rica.

```sql
SELECT AVG(salario) AS media_salarial FROM funcionarios;
```

---

### ‚úÖ 3. COUNT (Contagem)

Conta o n√∫mero de **linhas** ou de valores **n√£o nulos** em uma coluna.

```sql
-- Conta todos os funcion√°rios
SELECT COUNT(*) AS total_funcionarios FROM funcionarios;

-- Conta apenas os que t√™m b√¥nus
SELECT COUNT(bonus) AS com_bonus FROM funcionarios;
```

---

### ‚úÖ 4. MIN (Valor M√≠nimo)

Retorna o **menor valor** de uma coluna.

```sql
SELECT MIN(salario) AS menor_salario FROM funcionarios;
```

---

### ‚úÖ 5. MAX (Valor M√°ximo)

Retorna o **maior valor** de uma coluna.

```sql
SELECT MAX(salario) AS maior_salario FROM funcionarios;
```

---

### ‚úÖ 6. STDDEV (Desvio Padr√£o)

Retorna o **desvio padr√£o** de uma coluna num√©rica.

```sql
SELECT STDDEV(salario) AS desvio_padrao_salario FROM funcionarios;
```

---

### ‚úÖ 7. VARIANCE (Vari√¢ncia)

Retorna a **vari√¢ncia** dos valores em uma coluna num√©rica.

```sql
SELECT VARIANCE(salario) AS variancia_salario FROM funcionarios;
```

---

## üéØ Exemplo com todas as fun√ß√µes de grupo

```sql
SELECT 
  COUNT(*) AS total_func,
  SUM(salario) AS soma_salarios,
  AVG(salario) AS media_salario,
  MIN(salario) AS salario_minimo,
  MAX(salario) AS salario_maximo,
  STDDEV(salario) AS desvio_padrao,
  VARIANCE(salario) AS variancia
FROM funcionarios;
```

> ‚ö†Ô∏è As fun√ß√µes `SUM`, `AVG`, `STDDEV`, `VARIANCE` s√≥ operam com **colunas num√©ricas**.


===

## üìö Vocabul√°rio ‚Äì Fun√ß√µes de Grupo SQL

| Defini√ß√£o                                                                                   | Termo Correspondente        |
|---------------------------------------------------------------------------------------------|-----------------------------|
| Calcula o valor m√©dio excluindo nulos                                                       | `AVG`                       |
| Retorna o n√∫mero de linhas com valores n√£o nulos na express√£o                               | `COUNT`                     |
| Para dois conjuntos de dados com aproximadamente a mesma m√©dia, quanto maior a dispers√£o... | `STDDEV`                    |
| Operam em conjuntos de linhas para fornecer um resultado por grupo                          | Fun√ß√µes de Grupo            |
| Retorna um valor m√≠nimo ignorando nulos                                                     | `MIN`                       |
| Usada com colunas que armazenam dados num√©ricos para calcular a dispers√£o dos dados         | `VARIANCE`                  |
| Calcula a soma ignorando valores nulos                                                      | `SUM`                       |
| Retorna o valor m√°ximo ignorando nulos                                                      | `MAX`                       |
| Reunir em uma soma ou total                                                                 | `AGREGAR` ou `SUM`          |


===========

## üéØ 1. Defini√ß√£o e Exemplos das 7 Fun√ß√µes de Grupo

| Fun√ß√£o     | Defini√ß√£o                                                                 | Exemplo SQL                                                      |
|------------|--------------------------------------------------------------------------|------------------------------------------------------------------|
| `AVG`      | Retorna a m√©dia dos valores, ignorando nulos                            | `SELECT AVG(salario) FROM funcionarios;`                         |
| `COUNT`    | Retorna o n√∫mero de registros (n√£o nulos, se uma coluna for usada)       | `SELECT COUNT(*) FROM eventos;`                                 |
| `MAX`      | Retorna o valor m√°ximo de uma coluna                                     | `SELECT MAX(custo) FROM eventos;`                               |
| `MIN`      | Retorna o valor m√≠nimo de uma coluna                                     | `SELECT MIN(custo) FROM eventos;`                               |
| `STDDEV`   | Retorna o desvio padr√£o dos valores (variabilidade)                      | `SELECT STDDEV(salario) FROM funcionarios;`                      |
| `SUM`      | Retorna a soma de todos os valores (ignorando nulos)                    | `SELECT SUM(custo) FROM eventos;`                               |
| `VARIANCE` | Retorna a vari√¢ncia, ou seja, a dispers√£o dos dados em rela√ß√£o √† m√©dia  | `SELECT VARIANCE(salario) FROM funcionarios;`                   |

---

## üìä 2. Consulta: Custo m√©dio dos eventos (DJs on Demand)

```sql
SELECT ROUND(AVG(custo_evento), 2) AS "Custo M√©dio"
FROM d_events;
```

---

## üíº 3. Consulta: M√©dia salarial dos membros da equipe cujo gerente tem ID 19 (Global Fast Foods)

```sql
SELECT AVG(salario) AS "M√©dia Salarial"
FROM funcionarios
WHERE gerente_id = 19;
```


## üìä 4. Consulta: Soma dos sal√°rios dos membros das equipes com os IDs 12 e 9 (Global Fast Foods)

```sql
SELECT SUM(salario) AS "Soma dos Sal√°rios"
FROM funcionarios
WHERE equipe_id IN (12, 9);
```

---

## üìÖ 5. Consulta: Menor sal√°rio, data de contrata√ß√£o mais recente, sobrenome da primeira e √∫ltima pessoa na lista alfab√©tica dos funcion√°rios (Departamentos 50 ou 60)

```sql
SELECT MIN(salario) AS "Menor Sal√°rio", 
       MAX(data_contratacao) AS "Data de Contrata√ß√£o mais Recente", 
       (SELECT sobrenome FROM funcionarios WHERE ROWNUM = 1 ORDER BY sobrenome ASC) AS "Primeiro Funcion√°rio", 
       (SELECT sobrenome FROM funcionarios WHERE ROWNUM = 1 ORDER BY sobrenome DESC) AS "√öltimo Funcion√°rio"
FROM funcionarios
WHERE departamento_id IN (50, 60);
```

---

## üìù 6. Consulta: N√∫mero de linhas retornadas pela soma de `total_sales` na tabela de pedidos

A consulta:

```sql
SELECT sum(total_sales)
FROM orders;
```

**Resposta**: A consulta retornar√° apenas **uma linha** com o valor da soma total das vendas. N√£o retornar√° o n√∫mero de linhas, mas sim o valor da soma.

---

## üö® 7. Relat√≥rio das m√©dias salariais de funcion√°rios pagos por hora

A causa mais prov√°vel para a m√©dia salarial estar "muito acima" do esperado √© que os funcion√°rios pagos por hora est√£o sendo inclu√≠dos na m√©dia salarial sem que voc√™ tenha filtrado adequadamente os dados. Para corrigir isso, seria necess√°rio:

- Garantir que voc√™ exclua os funcion√°rios pagos por hora, ou
- Calcular separadamente a m√©dia salarial para os funcion√°rios pagos por hora e os que recebem sal√°rio fixo.

---

## üìÖ 8. Consulta: Data m√≠nima de nascimento dos funcion√°rios (Global Fast Foods)

```sql
SELECT MIN(birthdate) 
FROM funcionarios;
```

**Resposta**: A data m√≠nima de nascimento ser√° **30 de mar√ßo de 1969**.

---

## üìÖ 9. Consulta: M√©dia total de todos os pedidos da Global Fast Foods de 1¬∫ de janeiro de 2002 a 21 de dezembro de 2002

```sql
SELECT AVG(total_sales) AS "M√©dia de Vendas"
FROM orders
WHERE order_date BETWEEN TO_DATE('2002-01-01', 'YYYY-MM-DD') 
                      AND TO_DATE('2002-12-21', 'YYYY-MM-DD');
```

---

## üìÖ 10. Consulta: Data de contrata√ß√£o do √∫ltimo funcion√°rio contratado pela Oracle

```sql
SELECT MAX(data_contratacao) AS "√öltima Data de Contrata√ß√£o"
FROM funcionarios
WHERE empresa = 'Oracle';
```

---

## üî¢ 11. Consulta: Qual valor ser√° maior: `SUM(operating_cost)` ou `AVG(operating_cost)`?

**Resposta**: O valor retornado por `SUM(operating_cost)` ser√° maior, pois ele retorna a soma total dos custos operacionais, enquanto `AVG(operating_cost)` retorna a m√©dia.

---

## üìä 12. Validade de consultas SQL em rela√ß√£o √† tabela `D_EVENTS` da DJs on Demand:

- **a. FROM event_date**: **Inv√°lido**. `FROM` deve ser seguido por uma tabela ou subconsulta.
- **b. SELECT SUM(cost)**: **V√°lido**. Isso soma a coluna `cost` de `D_EVENTS`.
- **c. SELECT SUM(event_date)**: **Inv√°lido**. N√£o faz sentido somar uma data.
- **d. SELECT AVG(cost) AS "Expense"**: **V√°lido**. Isso calcula a m√©dia da coluna `cost`.
- **e. WHERE MIN(id) = 100**: **Inv√°lido**. `MIN()` n√£o pode ser usado em uma condi√ß√£o `WHERE`.
- **f. SELECT MAX(AVG(cost))**: **Inv√°lido**. `MAX()` n√£o pode ser usado em conjunto com `AVG()` sem uma subconsulta.
- **g. SELECT MIN(event_date)**: **V√°lido**. Isso retorna a data m√≠nima de `event_date`.



========================
| COUNT, DISTINCT, NVL |
=======================


üìä 1. Criar e executar uma consulta SQL usando a fun√ß√£o de grupo COUNT
A fun√ß√£o COUNT √© usada para contar o n√∫mero de linhas que atendem a um crit√©rio especificado. Aqui est√° um exemplo simples para contar o n√∫mero de funcion√°rios de uma empresa:


SELECT COUNT(*) AS "N√∫mero de Funcion√°rios"
FROM funcionarios;
Essa consulta retorna o n√∫mero total de funcion√°rios na tabela funcionarios.




üîÑ 2. Usar DISTINCT e a fun√ß√£o NVL com fun√ß√µes de grupo
A fun√ß√£o DISTINCT √© usada para contar valores √∫nicos, e NVL substitui valores nulos por um valor especificado. Aqui est√° um exemplo de como us√°-los juntos:

a. Exemplo com DISTINCT:

SELECT COUNT(DISTINCT departamento_id) AS "N√∫mero de Departamentos Distintos"
FROM funcionarios;
Essa consulta retorna o n√∫mero de departamentos distintos na tabela funcionarios.

b. Exemplo com NVL:

SELECT NVL(SUM(salario), 0) AS "Soma de Sal√°rios"
FROM funcionarios;
Aqui, a fun√ß√£o NVL substitui qualquer soma nula de sal√°rios por 0. Se n√£o houver sal√°rios na tabela ou todos os valores forem nulos, o resultado ser√° 0 em vez de um valor nulo.

c. Exemplo usando DISTINCT e NVL juntos:

SELECT COUNT(DISTINCT NVL(departamento_id, 'Desconhecido')) AS "Departamentos Distintos (com valores nulos tratados)"
FROM funcionarios;
Nesta consulta, usamos o NVL para substituir qualquer valor nulo de departamento_id por 'Desconhecido' antes de contar os valores distintos.


1. **Retorna o n√∫mero de valores n√£o nulos na coluna da express√£o.**
   - **COUNT**: A fun√ß√£o `COUNT` retorna o n√∫mero de valores n√£o nulos na coluna especificada.

2. **A palavra-chave usada para retornar somente valores n√£o duplicados ou combina√ß√µes de valores n√£o duplicados em uma consulta.**
   - **DISTINCT**: A palavra-chave `DISTINCT` √© usada em uma consulta SQL para retornar apenas valores √∫nicos (n√£o duplicados).

3. **Retorna o n√∫mero de valores n√£o nulos exclusivos na coluna da express√£o.**
   - **COUNT DISTINCT**: A combina√ß√£o de `COUNT` com `DISTINCT` retorna o n√∫mero de valores distintos n√£o nulos na coluna especificada.


=====================================================================
1. Quantas m√∫sicas est√£o listadas na tabela D_SONGS da DJs on Demand?

SELECT COUNT(*) 
FROM D_SONGS;

2. Em quantos tipos de locais diferentes a DJs on Demand teve eventos?

SELECT COUNT(DISTINCT location_type) 
FROM D_EVENTS;

3. A tabela d_track_listings do banco de dados da DJs on Demand tem uma coluna chamada song_id e outra chamada cd_number. Quantos IDs de m√∫sica e quantos n√∫meros diferentes de CD existem na tabela?

SELECT COUNT(DISTINCT song_id) AS unique_song_ids,
       COUNT(DISTINCT cd_number) AS unique_cd_numbers
FROM d_track_listings;

4. Quantos clientes da DJs on Demand t√™m endere√ßos de e-mail?

SELECT COUNT(*) 
FROM D_CUSTOMERS 
WHERE email IS NOT NULL;

5. Alguns dos parceiros da DJs on Demand n√£o t√™m valores de despesas autorizados (auth_expense_amt). Quantos parceiros t√™m esse privil√©gio?

SELECT COUNT(*) 
FROM D_PARTNERS
WHERE auth_expense_amt IS NULL;
