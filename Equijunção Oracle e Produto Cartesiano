## Junções em Oracle SQL vs SQL ANSI/ISO:1999

### Tipos de Junção e Suas Sintaxes

| Tipo de Junção              | Sintaxe Oracle Proprietária        | Sintaxe ANSI/ISO SQL:1999               |
|-----------------------------|-------------------------------------|-----------------------------------------|
| Equijunção                  | WHERE t1.coluna = t2.coluna         | JOIN t2 ON t1.coluna = t2.coluna        |
| Junção externa esquerda     | t1.coluna = t2.coluna(+)            | LEFT OUTER JOIN t2 ON ...               |
| Junção externa direita      | t1.coluna(+) = t2.coluna            | RIGHT OUTER JOIN t2 ON ...              |
| Junção interna              | WHERE t1.coluna = t2.coluna         | INNER JOIN t2 ON t1.coluna = t2.coluna  |
| Junção externa completa     | (não suportado diretamente)         | FULL OUTER JOIN t2 ON ...               |
| Junção cruzada              | FROM t1, t2                         | CROSS JOIN t2                           |
| Autojunção                  | FROM t1 a, t1 b                     | JOIN t1 b ON a.coluna = b.coluna        |

---

## 🧠 Finalidade das Condições de Junção

As condições de junção servem para:
- Combinar dados de várias tabelas relacionadas
- Controlar os registros exibidos na saída
- Evitar produtos cartesianos (todas as combinações possíveis entre linhas de tabelas)

---

## 🧪 Produto Cartesiano (sem condição de junção)

```sql
SELECT e.nome, d.nome_depart
FROM funcionarios e, departamentos d;
```
> ❗ Retorna todos os funcionários combinados com todos os departamentos.

---

## ✅ Equijunção

### 🔷 Sintaxe Oracle

```sql
SELECT e.nome, d.nome_depart
FROM funcionarios e, departamentos d
WHERE e.id_depart = d.id_depart;
```

### 🔶 Sintaxe ANSI

```sql
SELECT e.nome, d.nome_depart
FROM funcionarios e
JOIN departamentos d ON e.id_depart = d.id_depart;
```

---

## ➕ Junção com Condições Extras (AND)

```sql
SELECT e.nome, d.nome_depart
FROM funcionarios e
JOIN departamentos d ON e.id_depart = d.id_depart
WHERE d.localizacao = 'São Paulo'
AND e.salario > 3000;
```

---

## 🏷️ Uso de Aliases em Junções

```sql
SELECT f.nome AS Funcionario, d.nome_depart AS Departamento
FROM funcionarios f
JOIN departamentos d ON f.id_depart = d.id_depart;
```

- Use aliases curtos para tabelas (`f`, `d`) e nomes descritivos para colunas.
- Melhora a legibilidade e facilita manutenção da consulta.

---

